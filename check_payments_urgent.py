#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
๐จ ูุญุต ุนุงุฌู: ุฃูู ุงูุฏูุนุงุชุ
"""
from app import app, db
from models import Payment, Invoice, Sale, Customer
from sqlalchemy import func

def check_payments():
    with app.app_context():
        print("\n" + "="*70)
        print("๐จ ูุญุต ุนุงุฌู: ุงูุฏูุนุงุช")
        print("="*70 + "\n")
        
        # 1. ุนุฏุฏ ุงูุฏูุนุงุช ุงูููู
        total_payments = Payment.query.count()
        print(f"๐ฐ ุฅุฌูุงูู ุงูุฏูุนุงุช ูู ุงูุฌุฏูู: {total_payments}")
        
        if total_payments == 0:
            print("โ ูุง ุชูุฌุฏ ุฏูุนุงุช ูู ุงูุฌุฏูู!")
            print("   ูุฐู ูุดููุฉ ุฎุทูุฑุฉ - ุงูุจูุงูุงุช ูููุฏุช!")
            print("\n" + "="*70)
            return
        
        print()
        
        # 2. ุงูุฏูุนุงุช ุญุณุจ ุงูููุน
        customer_payments = Payment.query.filter(Payment.customer_id.isnot(None)).count()
        supplier_payments = Payment.query.filter(Payment.supplier_id.isnot(None)).count()
        partner_payments = Payment.query.filter(Payment.partner_id.isnot(None)).count()
        
        print("๐ ุชุตููู ุงูุฏูุนุงุช:")
        print(f"   - ุฏูุนุงุช ุงูุนููุงุก: {customer_payments}")
        print(f"   - ุฏูุนุงุช ุงูููุฑุฏูู: {supplier_payments}")
        print(f"   - ุฏูุนุงุช ุงูุดุฑูุงุก: {partner_payments}")
        print()
        
        # 3. ุงูุฏูุนุงุช ุงููุฑุชุจุทุฉ ุจุงูููุงุชูุฑ
        invoice_payments = Payment.query.filter(Payment.invoice_id.isnot(None)).count()
        print(f"๐ ุฏูุนุงุช ูุฑุชุจุทุฉ ุจููุงุชูุฑ: {invoice_payments}")
        
        # 4. ุงูุฏูุนุงุช ุงููุฑุชุจุทุฉ ุจุงููุจูุนุงุช
        sale_payments = Payment.query.filter(Payment.sale_id.isnot(None)).count()
        print(f"๐ ุฏูุนุงุช ูุฑุชุจุทุฉ ุจูุจูุนุงุช: {sale_payments}")
        print()
        
        # 5. ุฃูุซูุฉ
        print("๐ ุฃูุซูุฉ ุนูู ุงูุฏูุนุงุช:")
        sample_payments = Payment.query.limit(5).all()
        for p in sample_payments:
            entity = "ุนููู" if p.customer_id else "ููุฑุฏ" if p.supplier_id else "ุดุฑูู" if p.partner_id else "ุ"
            linked = ""
            if p.invoice_id:
                linked = f" โ ูุงุชูุฑุฉ #{p.invoice_id}"
            elif p.sale_id:
                linked = f" โ ูุจูุนุฉ #{p.sale_id}"
            print(f"   - ุฏูุนุฉ #{p.id} ({entity}): {p.total_amount} โช - {p.status}{linked}")
        print()
        
        # 6. ุงูุชุญูู ูู ุงูููุงุชูุฑ
        total_invoices = Invoice.query.count()
        print(f"๐ ุฅุฌูุงูู ุงูููุงุชูุฑ: {total_invoices}")
        
        if total_invoices > 0:
            sample_invoice = Invoice.query.first()
            invoice_payments_count = Payment.query.filter(Payment.invoice_id == sample_invoice.id).count()
            print(f"   ูุซุงู: ูุงุชูุฑุฉ #{sample_invoice.id} ููุง {invoice_payments_count} ุฏูุนุฉ")
            print(f"   - ุฅุฌูุงูู ุงููุงุชูุฑุฉ: {sample_invoice.total_amount} โช")
            print(f"   - ุงููุจูุบ ุงููุฏููุน: {sample_invoice.total_paid} โช")
            print(f"   - ุงูุญุงูุฉ: {sample_invoice.status}")
        print()
        
        # 7. ุงูุชุญูู ูู ุงูุนููุงุก
        customers_with_payments = db.session.query(func.count(func.distinct(Payment.customer_id)))\
            .filter(Payment.customer_id.isnot(None)).scalar() or 0
        print(f"๐ฅ ุนุฏุฏ ุงูุนููุงุก ุงูุฐูู ููู ุฏูุนุงุช: {customers_with_payments}")
        
        print("\n" + "="*70)
        
        if total_payments > 0:
            print("โ ุงูุฏูุนุงุช ููุฌูุฏุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช")
            print("   ุฅุฐุง ูู ุชุธูุฑ ูู ุงููุงุฌูุฉุ ุงููุดููุฉ ูู ุงูููุฏ ูููุณ ุงูุจูุงูุงุช")
        else:
            print("โ ุงูุจูุงูุงุช ูููุฏุช - ูุญุชุงุฌ ุงุณุชุนุงุฏุฉ ูู Backup!")
        
        print("="*70 + "\n")

if __name__ == '__main__':
    check_payments()

