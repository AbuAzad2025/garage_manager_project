"""Add condition field to SaleReturnLine for tracking return status

Revision ID: d04b4fafdf38
Revises: discount_to_amount_001
Create Date: 2025-10-30 15:56:54.884732

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd04b4fafdf38'
down_revision = 'discount_to_amount_001'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_branches')
    op.drop_table('_alembic_tmp_warehouses')
    with op.batch_alter_table('branches', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_branches_manager_employee_id'), ['manager_employee_id'], unique=False)
        batch_op.drop_constraint('fk_branches_manager_user', type_='foreignkey')
        batch_op.drop_constraint('fk_branches_archived_by', type_='foreignkey')
        batch_op.create_foreign_key(None, 'employees', ['manager_employee_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['archived_by'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['manager_user_id'], ['id'])

    with op.batch_alter_table('employee_advance_installments', schema=None) as batch_op:
        batch_op.drop_index('ix_advance_installments_advance_id')
        batch_op.drop_index('ix_advance_installments_due_date')
        batch_op.drop_index('ix_advance_installments_employee_id')
        batch_op.drop_index('ix_advance_installments_paid')
        batch_op.create_index(batch_op.f('ix_employee_advance_installments_advance_expense_id'), ['advance_expense_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_employee_advance_installments_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_employee_advance_installments_due_date'), ['due_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_employee_advance_installments_employee_id'), ['employee_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_employee_advance_installments_paid'), ['paid'], unique=False)
        batch_op.create_index(batch_op.f('ix_employee_advance_installments_salary_expense_id'), ['salary_expense_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_employee_advance_installments_updated_at'), ['updated_at'], unique=False)
        batch_op.drop_constraint('fk_advance_installments_advance', type_='foreignkey')
        batch_op.drop_constraint('fk_advance_installments_employee', type_='foreignkey')
        batch_op.drop_constraint('fk_advance_installments_salary', type_='foreignkey')
        batch_op.create_foreign_key(None, 'expenses', ['salary_expense_id'], ['id'])
        batch_op.create_foreign_key(None, 'expenses', ['advance_expense_id'], ['id'])
        batch_op.create_foreign_key(None, 'employees', ['employee_id'], ['id'])

    with op.batch_alter_table('employee_deductions', schema=None) as batch_op:
        batch_op.drop_index('ix_employee_deductions_type')
        batch_op.create_index(batch_op.f('ix_employee_deductions_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_employee_deductions_deduction_type'), ['deduction_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_employee_deductions_expense_id'), ['expense_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_employee_deductions_updated_at'), ['updated_at'], unique=False)
        batch_op.drop_constraint('fk_employee_deductions_employee', type_='foreignkey')
        batch_op.drop_constraint('fk_employee_deductions_expense', type_='foreignkey')
        batch_op.create_foreign_key(None, 'expenses', ['expense_id'], ['id'])
        batch_op.create_foreign_key(None, 'employees', ['employee_id'], ['id'])

    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.alter_column('branch_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_index('ix_employees_branch_name')
        batch_op.create_index(batch_op.f('ix_employees_branch_id'), ['branch_id'], unique=False)
        batch_op.create_foreign_key(None, 'branches', ['branch_id'], ['id'])
        batch_op.create_foreign_key(None, 'sites', ['site_id'], ['id'])

    with op.batch_alter_table('expenses', schema=None) as batch_op:
        batch_op.alter_column('branch_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_index('ix_expenses_branch_date')
        batch_op.create_foreign_key(None, 'branches', ['branch_id'], ['id'])
        batch_op.create_foreign_key(None, 'sites', ['site_id'], ['id'])

    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.alter_column('payment_number',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('payment_date',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.alter_column('method',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.Enum('cash', 'bank', 'card', 'cheque', 'online', name='payment_method', native_enum=False),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.Enum('PENDING', 'COMPLETED', 'FAILED', 'REFUNDED', 'CANCELLED', name='payment_status', native_enum=False),
               existing_nullable=False)
        batch_op.alter_column('entity_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('CUSTOMER', 'SUPPLIER', 'PARTNER', 'SHIPMENT', 'EXPENSE', 'LOAN', 'SALE', 'INVOICE', 'PREORDER', 'SERVICE', 'MISCELLANEOUS', 'OTHER', name='payment_entity_type', native_enum=False),
               nullable=False)
        batch_op.alter_column('check_bank',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('card_holder',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('card_expiry',
               existing_type=sa.VARCHAR(length=7),
               type_=sa.String(length=10),
               existing_nullable=True)
        batch_op.create_index('ix_pay_created_at', ['payment_date'], unique=False)
        batch_op.create_index('ix_pay_direction', ['direction'], unique=False)
        batch_op.create_index('ix_pay_status', ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_payments_archived_at'), ['archived_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_payments_archived_by'), ['archived_by'], unique=False)
        batch_op.create_index(batch_op.f('ix_payments_created_by'), ['created_by'], unique=False)
        batch_op.create_index(batch_op.f('ix_payments_entity_type'), ['entity_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_payments_expense_id'), ['expense_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payments_idempotency_key'), ['idempotency_key'], unique=True)
        batch_op.create_index(batch_op.f('ix_payments_is_archived'), ['is_archived'], unique=False)
        batch_op.create_index(batch_op.f('ix_payments_loan_settlement_id'), ['loan_settlement_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payments_receipt_number'), ['receipt_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_payments_refund_of_id'), ['refund_of_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payments_shipment_id'), ['shipment_id'], unique=False)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['archived_by'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key(None, 'supplier_loan_settlements', ['loan_settlement_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('saas_invoices', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.create_index(batch_op.f('ix_saas_invoices_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_saas_invoices_invoice_number'), ['invoice_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_saas_invoices_subscription_id'), ['subscription_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_saas_invoices_updated_at'), ['updated_at'], unique=False)

    with op.batch_alter_table('saas_plans', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.create_index(batch_op.f('ix_saas_plans_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_saas_plans_updated_at'), ['updated_at'], unique=False)
        batch_op.create_unique_constraint(None, ['name'])

    with op.batch_alter_table('saas_subscriptions', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.create_index(batch_op.f('ix_saas_subscriptions_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_saas_subscriptions_customer_id'), ['customer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_saas_subscriptions_plan_id'), ['plan_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_saas_subscriptions_updated_at'), ['updated_at'], unique=False)

    with op.batch_alter_table('sale_return_lines', schema=None) as batch_op:
        batch_op.add_column(sa.Column('condition', sa.Enum('GOOD', 'DAMAGED', 'FOR_REPAIR', 'UNUSABLE', name='return_line_condition', native_enum=False), nullable=False))
        batch_op.create_index(batch_op.f('ix_sale_return_lines_condition'), ['condition'], unique=False)

    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.drop_index('ix_sales_archived')

    with op.batch_alter_table('service_parts', schema=None) as batch_op:
        batch_op.alter_column('discount',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               nullable=True,
               existing_server_default=sa.text('0'))

    with op.batch_alter_table('service_requests', schema=None) as batch_op:
        batch_op.drop_index('ix_service_customer_status_date')
        batch_op.drop_index('ix_service_mechanic_status_date')
        batch_op.drop_index('ix_service_priority_status')
        batch_op.drop_index('ix_service_requests_archived')

    with op.batch_alter_table('service_tasks', schema=None) as batch_op:
        batch_op.alter_column('discount',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               nullable=True,
               existing_server_default=sa.text('0'))

    with op.batch_alter_table('shipments', schema=None) as batch_op:
        batch_op.drop_index('ix_shipments_archived')
        batch_op.drop_index('ix_shipments_dest_status_date')

    with op.batch_alter_table('sites', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.create_index(batch_op.f('ix_sites_archived_at'), ['archived_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_sites_archived_by'), ['archived_by'], unique=False)
        batch_op.create_index(batch_op.f('ix_sites_branch_id'), ['branch_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sites_code'), ['code'], unique=False)
        batch_op.create_index(batch_op.f('ix_sites_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_sites_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_sites_is_archived'), ['is_archived'], unique=False)
        batch_op.create_index(batch_op.f('ix_sites_manager_employee_id'), ['manager_employee_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sites_manager_user_id'), ['manager_user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sites_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_sites_updated_at'), ['updated_at'], unique=False)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['manager_user_id'], ['id'])
        batch_op.create_foreign_key(None, 'branches', ['branch_id'], ['id'])
        batch_op.create_foreign_key(None, 'employees', ['manager_employee_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['archived_by'], ['id'])

    with op.batch_alter_table('suppliers', schema=None) as batch_op:
        batch_op.drop_index('ix_suppliers_archived')

    with op.batch_alter_table('warehouses', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'branches', ['branch_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('warehouses', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('suppliers', schema=None) as batch_op:
        batch_op.create_index('ix_suppliers_archived', ['is_archived', 'archived_at'], unique=False)

    with op.batch_alter_table('sites', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'branches', ['branch_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['manager_user_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'users', ['archived_by'], ['id'], ondelete='SET NULL')
        batch_op.drop_index(batch_op.f('ix_sites_updated_at'))
        batch_op.drop_index(batch_op.f('ix_sites_name'))
        batch_op.drop_index(batch_op.f('ix_sites_manager_user_id'))
        batch_op.drop_index(batch_op.f('ix_sites_manager_employee_id'))
        batch_op.drop_index(batch_op.f('ix_sites_is_archived'))
        batch_op.drop_index(batch_op.f('ix_sites_is_active'))
        batch_op.drop_index(batch_op.f('ix_sites_created_at'))
        batch_op.drop_index(batch_op.f('ix_sites_code'))
        batch_op.drop_index(batch_op.f('ix_sites_branch_id'))
        batch_op.drop_index(batch_op.f('ix_sites_archived_by'))
        batch_op.drop_index(batch_op.f('ix_sites_archived_at'))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('shipments', schema=None) as batch_op:
        batch_op.create_index('ix_shipments_dest_status_date', ['destination_id', 'status', 'shipment_date'], unique=False)
        batch_op.create_index('ix_shipments_archived', ['is_archived', 'archived_at'], unique=False)

    with op.batch_alter_table('service_tasks', schema=None) as batch_op:
        batch_op.alter_column('discount',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               nullable=False,
               existing_server_default=sa.text('0'))

    with op.batch_alter_table('service_requests', schema=None) as batch_op:
        batch_op.create_index('ix_service_requests_archived', ['is_archived', 'archived_at'], unique=False)
        batch_op.create_index('ix_service_priority_status', ['priority', 'status'], unique=False)
        batch_op.create_index('ix_service_mechanic_status_date', ['mechanic_id', 'status', 'received_at'], unique=False)
        batch_op.create_index('ix_service_customer_status_date', ['customer_id', 'status', 'received_at'], unique=False)

    with op.batch_alter_table('service_parts', schema=None) as batch_op:
        batch_op.alter_column('discount',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               nullable=False,
               existing_server_default=sa.text('0'))

    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.create_index('ix_sales_archived', ['is_archived', 'archived_at'], unique=False)

    with op.batch_alter_table('sale_return_lines', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sale_return_lines_condition'))
        batch_op.drop_column('condition')

    with op.batch_alter_table('saas_subscriptions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_saas_subscriptions_updated_at'))
        batch_op.drop_index(batch_op.f('ix_saas_subscriptions_plan_id'))
        batch_op.drop_index(batch_op.f('ix_saas_subscriptions_customer_id'))
        batch_op.drop_index(batch_op.f('ix_saas_subscriptions_created_at'))
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('saas_plans', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_index(batch_op.f('ix_saas_plans_updated_at'))
        batch_op.drop_index(batch_op.f('ix_saas_plans_created_at'))
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('saas_invoices', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_saas_invoices_updated_at'))
        batch_op.drop_index(batch_op.f('ix_saas_invoices_subscription_id'))
        batch_op.drop_index(batch_op.f('ix_saas_invoices_invoice_number'))
        batch_op.drop_index(batch_op.f('ix_saas_invoices_created_at'))
        batch_op.alter_column('updated_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['archived_by'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'users', ['created_by'], ['id'], ondelete='SET NULL')
        batch_op.drop_index(batch_op.f('ix_payments_shipment_id'))
        batch_op.drop_index(batch_op.f('ix_payments_refund_of_id'))
        batch_op.drop_index(batch_op.f('ix_payments_receipt_number'))
        batch_op.drop_index(batch_op.f('ix_payments_loan_settlement_id'))
        batch_op.drop_index(batch_op.f('ix_payments_is_archived'))
        batch_op.drop_index(batch_op.f('ix_payments_idempotency_key'))
        batch_op.drop_index(batch_op.f('ix_payments_expense_id'))
        batch_op.drop_index(batch_op.f('ix_payments_entity_type'))
        batch_op.drop_index(batch_op.f('ix_payments_created_by'))
        batch_op.drop_index(batch_op.f('ix_payments_archived_by'))
        batch_op.drop_index(batch_op.f('ix_payments_archived_at'))
        batch_op.drop_index('ix_pay_status')
        batch_op.drop_index('ix_pay_direction')
        batch_op.drop_index('ix_pay_created_at')
        batch_op.alter_column('card_expiry',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=7),
               existing_nullable=True)
        batch_op.alter_column('card_holder',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
        batch_op.alter_column('check_bank',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
        batch_op.alter_column('entity_type',
               existing_type=sa.Enum('CUSTOMER', 'SUPPLIER', 'PARTNER', 'SHIPMENT', 'EXPENSE', 'LOAN', 'SALE', 'INVOICE', 'PREORDER', 'SERVICE', 'MISCELLANEOUS', 'OTHER', name='payment_entity_type', native_enum=False),
               type_=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.Enum('PENDING', 'COMPLETED', 'FAILED', 'REFUNDED', 'CANCELLED', name='payment_status', native_enum=False),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
        batch_op.alter_column('method',
               existing_type=sa.Enum('cash', 'bank', 'card', 'cheque', 'online', name='payment_method', native_enum=False),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
        batch_op.alter_column('payment_date',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.alter_column('payment_number',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)

    with op.batch_alter_table('expenses', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_index('ix_expenses_branch_date', ['branch_id', 'date'], unique=False)
        batch_op.alter_column('branch_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_employees_branch_id'))
        batch_op.create_index('ix_employees_branch_name', ['branch_id', 'name'], unique=False)
        batch_op.alter_column('branch_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('employee_deductions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_employee_deductions_expense', 'expenses', ['expense_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key('fk_employee_deductions_employee', 'employees', ['employee_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_index(batch_op.f('ix_employee_deductions_updated_at'))
        batch_op.drop_index(batch_op.f('ix_employee_deductions_expense_id'))
        batch_op.drop_index(batch_op.f('ix_employee_deductions_deduction_type'))
        batch_op.drop_index(batch_op.f('ix_employee_deductions_created_at'))
        batch_op.create_index('ix_employee_deductions_type', ['deduction_type'], unique=False)

    with op.batch_alter_table('employee_advance_installments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_advance_installments_salary', 'expenses', ['salary_expense_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key('fk_advance_installments_employee', 'employees', ['employee_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('fk_advance_installments_advance', 'expenses', ['advance_expense_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_index(batch_op.f('ix_employee_advance_installments_updated_at'))
        batch_op.drop_index(batch_op.f('ix_employee_advance_installments_salary_expense_id'))
        batch_op.drop_index(batch_op.f('ix_employee_advance_installments_paid'))
        batch_op.drop_index(batch_op.f('ix_employee_advance_installments_employee_id'))
        batch_op.drop_index(batch_op.f('ix_employee_advance_installments_due_date'))
        batch_op.drop_index(batch_op.f('ix_employee_advance_installments_created_at'))
        batch_op.drop_index(batch_op.f('ix_employee_advance_installments_advance_expense_id'))
        batch_op.create_index('ix_advance_installments_paid', ['paid'], unique=False)
        batch_op.create_index('ix_advance_installments_employee_id', ['employee_id'], unique=False)
        batch_op.create_index('ix_advance_installments_due_date', ['due_date'], unique=False)
        batch_op.create_index('ix_advance_installments_advance_id', ['advance_expense_id'], unique=False)

    with op.batch_alter_table('branches', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_branches_archived_by', 'users', ['archived_by'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key('fk_branches_manager_user', 'users', ['manager_user_id'], ['id'], ondelete='SET NULL')
        batch_op.drop_index(batch_op.f('ix_branches_manager_employee_id'))

    op.create_table('_alembic_tmp_warehouses',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('warehouse_type', sa.VARCHAR(length=9), server_default=sa.text("'MAIN'"), nullable=False),
    sa.Column('location', sa.VARCHAR(length=200), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('1'), nullable=False),
    sa.Column('parent_id', sa.INTEGER(), nullable=True),
    sa.Column('supplier_id', sa.INTEGER(), nullable=True),
    sa.Column('partner_id', sa.INTEGER(), nullable=True),
    sa.Column('share_percent', sa.NUMERIC(precision=5, scale=2), server_default=sa.text('0'), nullable=True),
    sa.Column('capacity', sa.INTEGER(), nullable=True),
    sa.Column('current_occupancy', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('online_slug', sa.VARCHAR(length=150), nullable=True),
    sa.Column('online_is_default', sa.BOOLEAN(), server_default=sa.text('0'), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('branch_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], name='fk_warehouses_branch_id'),
    sa.ForeignKeyConstraint(['parent_id'], ['warehouses.id'], ),
    sa.ForeignKeyConstraint(['partner_id'], ['partners.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('online_slug')
    )
    op.create_table('user_branches',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('branch_id', sa.INTEGER(), nullable=False),
    sa.Column('is_primary', sa.BOOLEAN(), server_default=sa.text('0'), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'branch_id')
    )
    # ### end Alembic commands ###
