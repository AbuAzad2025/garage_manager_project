═══════════════════════════════════════════════════════════════════════
🔧 إصلاح مشكلة إضافة العملاء على PythonAnywhere
═══════════════════════════════════════════════════════════════════════

المشكلة:
--------
حقل opening_balance مفقود من جدول customers في قاعدة البيانات على PythonAnywhere

الحل:
-----
تنفيذ الأوامر التالية في PythonAnywhere Bash Console


═══════════════════════════════════════════════════════════════════════
📋 الأوامر (نسخ ولصق مباشرة)
═══════════════════════════════════════════════════════════════════════

# 1. الانتقال للمشروع وتفعيل البيئة الافتراضية
cd ~/garage_manager_project/garage_manager
source ~/.virtualenvs/garage_manager/bin/activate

# 2. تنفيذ الـ SQL لإضافة الحقول المفقودة
python3.10 -c "
from app import create_app, db
from sqlalchemy import text

app = create_app()
with app.app_context():
    try:
        # فحص إذا كان opening_balance موجود
        result = db.session.execute(text(\"PRAGMA table_info(customers)\")).fetchall()
        columns = [row[1] for row in result]
        
        if 'opening_balance' not in columns:
            print('⏳ إضافة opening_balance لجدول customers...')
            db.session.execute(text('ALTER TABLE customers ADD COLUMN opening_balance NUMERIC(12, 2) DEFAULT 0 NOT NULL'))
            db.session.commit()
            print('✅ تم إضافة opening_balance لجدول customers')
        else:
            print('✅ opening_balance موجود بالفعل في customers')
        
        # فحص suppliers
        result = db.session.execute(text(\"PRAGMA table_info(suppliers)\")).fetchall()
        columns = [row[1] for row in result]
        
        if 'opening_balance' not in columns:
            print('⏳ إضافة opening_balance لجدول suppliers...')
            db.session.execute(text('ALTER TABLE suppliers ADD COLUMN opening_balance NUMERIC(12, 2) DEFAULT 0 NOT NULL'))
            db.session.commit()
            print('✅ تم إضافة opening_balance لجدول suppliers')
        else:
            print('✅ opening_balance موجود بالفعل في suppliers')
        
        # فحص partners
        result = db.session.execute(text(\"PRAGMA table_info(partners)\")).fetchall()
        columns = [row[1] for row in result]
        
        if 'opening_balance' not in columns:
            print('⏳ إضافة opening_balance لجدول partners...')
            db.session.execute(text('ALTER TABLE partners ADD COLUMN opening_balance NUMERIC(12, 2) DEFAULT 0 NOT NULL'))
            db.session.commit()
            print('✅ تم إضافة opening_balance لجدول partners')
        else:
            print('✅ opening_balance موجود بالفعل في partners')
        
        print('')
        print('═══════════════════════════════════════════════════════')
        print('✅ تم إصلاح قاعدة البيانات بنجاح!')
        print('═══════════════════════════════════════════════════════')
        
    except Exception as e:
        print(f'❌ خطأ: {e}')
        db.session.rollback()
"

# 3. إعادة تحميل التطبيق
touch /var/www/palkaraj_pythonanywhere_com_wsgi.py

echo ""
echo "✅ تم! جرب إضافة عميل الآن"


═══════════════════════════════════════════════════════════════════════
📝 ملاحظات مهمة
═══════════════════════════════════════════════════════════════════════

1. ✅ الأوامر آمنة: فقط إضافة حقول جديدة (لا حذف)
2. ✅ التحقق التلقائي: يتحقق من وجود الحقل قبل الإضافة
3. ✅ القيم الافتراضية: 0 لجميع السجلات الحالية
4. ✅ لا يؤثر: على البيانات الموجودة


═══════════════════════════════════════════════════════════════════════
🔍 للتحقق من النجاح
═══════════════════════════════════════════════════════════════════════

بعد تنفيذ الأوامر، جرب:
1. إضافة عميل جديد من الموقع
2. يجب أن تعمل بدون أخطاء
3. يمكنك ترك opening_balance فارغاً أو تعبئته


═══════════════════════════════════════════════════════════════════════
📌 ملاحظة
═══════════════════════════════════════════════════════════════════════

- هذا الحقل (opening_balance) يُستخدم للرصيد الافتتاحي
- موجب = له علينا (دين علينا)
- سالب = عليه لنا (دين له)
- صفر = لا يوجد رصيد افتتاحي (الافتراضي)

